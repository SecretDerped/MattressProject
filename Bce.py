import os

import pandas as pd
import streamlit as st

import datetime
from utils.tools import config, read_file, save_to_file

task_cash = config.get('site').get('cash_filepath')

fabrics = list(config.get('fabric_corrections'))

# TODO: –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤—ã–≥—Ä—É–∑–∫—É —Ç–∫–∞–Ω–∏ –∏–∑ –°–ë–ò–° –∏ –∫–æ–Ω—Ñ–∏–≥–æ–≤

regions = config.get('site').get('regions')

delivery_type = ['–°–∞–º–æ–≤—ã–≤–æ–∑', "–ì–æ—Ä–æ–¥", "–ö—Ä–∞–π", "–†–µ–≥–∏–æ–Ω—ã", "–°—Ç—Ä–∞–Ω—ã"]

st.set_page_config(page_title="–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–µ—Ä–º–∏–Ω–∞–ª",
                   page_icon="üõ†Ô∏è",
                   layout="wide")

CASH_STATE = 'task_dataframe'
SHOW_TABLE = 'show_table'

employee_columns = {
    "is_on_shift": st.column_config.CheckboxColumn("–ù–∞ —Å–º–µ–Ω–µ", default=False),

    "name": st.column_config.TextColumn("–ò–º—è / –§–∞–º–∏–ª–∏—è"),

    "position": st.column_config.ListColumn("–†–æ–ª—å", options=['1', "2"], required=True)
}

editors_columns = {
    "high_priority": st.column_config.CheckboxColumn("–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç", default=False),

    "deadline": st.column_config.DateColumn("–°—Ä–æ–∫",
                                            min_value=datetime.date(2020, 1, 1),
                                            max_value=datetime.date(2199, 12, 31),
                                            format="DD.MM.YYYY",
                                            step=1,
                                            default=datetime.date.today()),

    "article": "–ê—Ä—Ç–∏–∫—É–ª",

    "size": "–†–∞–∑–º–µ—Ä",

    "fabric": st.column_config.SelectboxColumn("–¢–∏–ø —Ç–∫–∞–Ω–∏",
                                               options=fabrics,
                                               default=fabrics[0],
                                               required=True),
    "attributes": "–°–æ—Å—Ç–∞–≤ –Ω–∞—á–∏–Ω–∫–∏",

    "comment": st.column_config.TextColumn("–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π", default=''),

    "photo": st.column_config.ImageColumn("–§–æ—Ç–æ", help="–ö–ª–∏–∫–Ω–∏—Ç–µ, —á—Ç–æ–±—ã —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å"),

    "fabric_is_done": st.column_config.CheckboxColumn("–ù–∞—Ä–µ–∑–∞–Ω–æ",
                                                      default=False),
    "gluing_is_done": st.column_config.CheckboxColumn("–°–æ–±—Ä–∞–Ω",
                                                      default=False),
    "sewing_is_done": st.column_config.CheckboxColumn("–ü–æ—à–∏—Ç",
                                                      default=False),
    "packing_is_done": st.column_config.CheckboxColumn("–£–ø–∞–∫–æ–≤–∞–Ω",
                                                       default=False),

    "delivery_type": st.column_config.SelectboxColumn("–¢–∏–ø –¥–æ—Å—Ç–∞–≤–∫–∏",
                                                      options=delivery_type,
                                                      default=delivery_type[0],
                                                      required=True),

    "address": "–ê–¥—Ä–µ—Å",

    "region": st.column_config.SelectboxColumn("–†–µ–≥–∏–æ–Ω",
                                               width='medium',
                                               options=regions,
                                               default=regions[0],
                                               required=True),

    "client": "–ö–ª–∏–µ–Ω—Ç",

    "history": st.column_config.TextColumn("–î–µ–π—Å—Ç–≤–∏—è",
                                           width='large',
                                           disabled=True),

    "created": st.column_config.DatetimeColumn("–°–æ–∑–¥–∞–Ω–æ",
                                               format="D.MM.YYYY | HH:MM",
                                               # default=datetime.datetime.today(),
                                               disabled=True),
}


def cashing(dataframe):
    st.session_state[CASH_STATE] = dataframe


def get_cash():
    return st.session_state[CASH_STATE]


def clear_cash():
    if CASH_STATE in st.session_state:
        del st.session_state[CASH_STATE]


def create_cashfile_if_empty(columns: dict[st.column_config], cash_filepath: str):
    """–ï—Å–ª–∏ —Ñ–∞–π–ª —Å –∫—ç—à–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞—ë—Ç –µ–≥–æ, –ø—Ä–æ–ø–∏—Å—ã–≤–∞—è –ø—É—Å—Ç—ã–µ –∫–æ–ª–æ–Ω–∫–∏
    –∏–∑ –∫–ª—é—á–µ–π —Å–ª–æ–≤–∞—Ä—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–ª–æ–Ω–Ω, —Ç–∏–ø–∞ –∏–∑ get_editors_columns()"""

    if not os.path.exists(cash_filepath):
        base_dict = {}
        for key in columns.keys():
            base_dict[key] = []
        empty_dataframe = pd.DataFrame(base_dict)
        open(cash_filepath, 'w+')
        save_to_file(empty_dataframe, cash_filepath)


def redact_tasks():
    """–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —ç—Ç–æ–º –ø—Ä–æ–µ–∫—Ç–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π —Ñ–∞–π–ª pkl —Å –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–æ–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ pandas.
    –ö—ç—à –≤—ã—Å—Ç—É–ø–∞–µ—Ç –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —Ç–∞–±–ª–∏—Ü—ã. –¢–∞–±–ª–∏—Ü–∞ —Å—Ç—Ä–µ–º–∏—Ç—Å—è –ø–æ–¥–≥—Ä—É–∑–∏—Ç—Å—è –∏–∑ –∫—ç—à–∞,
    –∞ –∫—ç—à –¥–µ–ª–∞–µ—Ç—Å—è –∏–∑ session_state - —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã. –ö–∞–∂–¥–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
    –ø—Ä–æ–≤–æ—Ü–∏—Ä—É—é—Ç on_change –º–µ—Ç–æ–¥—ã, –∞ –ø–æ—Ç–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã. –ü–æ—ç—Ç–æ–º—É —Å—Ç—Å—Ç–µ–º–∞
    —Ç–∞–∫–∞—è: –µ—Å–ª–∏ –∫—ç—à–∞ –Ω–µ—Ç - –ø–æ–¥–≥—Ä—É–∂–∞–µ—Ç—Å—è —Ç–∞–±–ª–∏—Ü–∞ –∏–∑ –±–∞–∑—ã, –æ–Ω–∞ –∂–µ –∫–æ–ø–∏—Ä—É–µ—Ç—Å—è –≤ –∫—ç—à.
    –ö–∞–∫ —Ç–æ–ª—å–∫–æ –∫–∞–∫–æ–µ-—Ç–æ –ø–æ–ª–µ –±—ã–ª–æ –∏–∑–º–µ–Ω–µ–Ω–æ, —Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ –∫—ç—à,
    –ø–æ—Ç–æ–º —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è, –ø–æ–¥–≥—Ä—É–∂–∞—è –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫—ç—à–∞, –∏ –ø–æ—Å–ª–µ –Ω–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏
    —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –±–∞–∑—É"""
    create_cashfile_if_empty(editors_columns, task_cash)

    # –°–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫–∏, –ø–æ—ç—Ç–æ–º—É —Ç—É—Ç
    # –µ–∫–æ—Ç–æ—Ä—ã–µ —Å—Ç–æ–ª–±—Ü—ã –ø—Ä–µ–æ–±—Ä–∞–∑—É—é—Ç—Å—è –≤ —Ç–∏–ø—ã, —á–∏—Ç–∞–µ–º—ã–µ –¥–ª—è pandas.
    dataframe_columns_types = {'deadline': "datetime64[ns]",
                               'created': "datetime64[ns]"}
    if CASH_STATE not in st.session_state:
        dataframe = read_file(task_cash)
        dataframe = dataframe.astype(dataframe_columns_types)
        cashing(dataframe)

    edited_df = get_cash()

    editor = st.data_editor(
        edited_df,
        column_config=editors_columns,
        hide_index=True,
        num_rows="fixed",
        on_change=cashing, args=(edited_df,),
        height=420
    )
    save_to_file(editor, task_cash)


@st.experimental_fragment(run_every="2s")
def show_tasks():
    st.dataframe(data=read_file(task_cash), column_config=editors_columns, hide_index=True)


################################################ Page ###################################################

tab1, tab2 = st.tabs(['–ù–∞—Ä—è–¥—ã', '–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏'])

with tab1:
    if SHOW_TABLE not in st.session_state:
        st.session_state[SHOW_TABLE] = False

    col1, col2 = st.columns([1, 2])

    with col1:
        st.title("üè≠ –í—Å–µ –Ω–∞—Ä—è–¥—ã")
        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è/—Å–∫—Ä—ã—Ç–∏—è —Ç–∞–±–ª–∏—Ü—ã —Å –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º —Ç–µ–∫—Å—Ç–∞
        button_text = '**–ü–µ—Ä–µ–π—Ç–∏ –≤ —Ä–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è**' if not st.session_state[SHOW_TABLE] else ":red[**–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –≤–µ—Ä–Ω—É—Ç—å —Ä–µ–∂–∏–º –ø—Ä–æ—Å–º–æ—Ç—Ä–∞**]"''
        if st.button(button_text):
            clear_cash()  # –û—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ —Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è
            st.session_state[SHOW_TABLE] = not st.session_state[SHOW_TABLE]
            st.rerun()

    with col2:
        st.write(' ')
        st.info('''–ß—Ç–æ–±—ã –ø–æ–ø—Ä–∞–≤–∏—Ç—å –ª—é–±–æ–π –Ω–∞—Ä—è–¥, –≤–∫–ª—é—á–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.
        –û–Ω –æ–±–ª–∞–¥–∞–µ—Ç –≤—ã—Å—à–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º - –ø–æ–∫–∞ –∞–∫—Ç–∏–≤–µ–Ω —Ä–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è,
        –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö —Ä–∞–±–æ—á–∏—Ö –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è. **–ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Ç–∞–±–ª–∏—Ü—É!**''')

    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
    if st.session_state[SHOW_TABLE]:
        redact_tasks()
    if not st.session_state[SHOW_TABLE]:
        show_tasks()

with tab2:
    col1, col2 = st.columns([1, 2])
    with col1:
        st.title("üë∑ –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏")
    with col2:
        st.write(' ')
        st.info('''–í—ã—Å—Ç–∞–≤–ª—è–π—Ç–µ —Ä–∞–±–æ—á–∏—Ö –Ω–∞ —Å–º–µ–Ω—É. –û–Ω–∏ –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –Ω–∞ –Ω—É–∂–Ω–æ–º —ç–∫—Ä–∞–Ω–µ.''')

