import os

import pandas as pd
import streamlit as st

import datetime
from utils.tools import config, read_file, save_to_file

cash_file = config.get('site').get('cash_filepath')
fabrics = list(config.get('fabric_corrections'))
articles = ["801", "802", "–£–Ω–∏–∫–∞–ª—å–Ω–∞—è"]
region = ['–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–∏–π –∫—Ä–∞–π', '–†–æ—Å—Ç–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', '–£—Ä–∞–ª—å—Å–∫–∏–π –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–π –æ–∫—Ä—É–≥']
delivery_type = ['–°–∞–º–æ–≤—ã–≤–æ–∑', "–ì–æ—Ä–æ–¥", "–ö—Ä–∞–π", "–†–µ–≥–∏–æ–Ω—ã", "–°—Ç—Ä–∞–Ω—ã"]
st.set_page_config(page_title="–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–µ—Ä–º–∏–Ω–∞–ª",
                   page_icon="üõ†Ô∏è",
                   layout="wide")

CASH_STATE = 'task_dataframe'


def cashing(dataframe):
    st.session_state[CASH_STATE] = dataframe


def get_cash():
    return st.session_state[CASH_STATE]


def clear_cash():
    if CASH_STATE in st.session_state:
        del st.session_state[CASH_STATE]


def get_editors_columns_params():
    return {
        "high_priority": st.column_config.CheckboxColumn("–í—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç", default=False),

        "deadline": st.column_config.DateColumn("–°—Ä–æ–∫",
                                                min_value=datetime.date(2020, 1, 1),
                                                max_value=datetime.date(2199, 12, 31),
                                                format="DD.MM.YYYY",
                                                step=1,
                                                default=datetime.date.today()),

        "article": st.column_config.SelectboxColumn("–ê—Ä—Ç–∏–∫—É–ª",
                                                    options=articles,
                                                    default=articles[0],
                                                    required=True),

        "size": "–†–∞–∑–º–µ—Ä",

        "fabric": st.column_config.SelectboxColumn("–¢–∏–ø —Ç–∫–∞–Ω–∏",
                                                   options=fabrics,
                                                   default=fabrics[0],
                                                   required=True),
        "attributes": "–°–æ—Å—Ç–∞–≤ –Ω–∞—á–∏–Ω–∫–∏",

        "comment": '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π',

        "photo": st.column_config.ImageColumn("–§–æ—Ç–æ", help="–ö–ª–∏–∫–Ω–∏—Ç–µ, —á—Ç–æ–±—ã —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å"),

        "fabric_is_done": st.column_config.CheckboxColumn("–ù–∞—Ä–µ–∑–∞–Ω–æ",
                                                          default=False),
        "gluing_is_done": st.column_config.CheckboxColumn("–°–æ–±—Ä–∞–Ω",
                                                          default=False),
        "sewing_is_done": st.column_config.CheckboxColumn("–ü–æ—à–∏—Ç",
                                                          default=False),
        "packing_is_done": st.column_config.CheckboxColumn("–£–ø–∞–∫–æ–≤–∞–Ω",
                                                           default=False),

        "address": "–ê–¥—Ä–µ—Å",

        "region": st.column_config.SelectboxColumn("–†–µ–≥–∏–æ–Ω",
                                                   options=region,
                                                   default=region[0],
                                                   required=True),

        "delivery_type": st.column_config.SelectboxColumn("–¢–∏–ø –¥–æ—Å—Ç–∞–≤–∫–∏",
                                                          options=delivery_type,
                                                          default=delivery_type[0],
                                                          required=True),

        "client": "–ö–ª–∏–µ–Ω—Ç",

        "history": st.column_config.TextColumn("–î–µ–π—Å—Ç–≤–∏—è",
                                               width='large',
                                               disabled=True),

        "created": st.column_config.DatetimeColumn("–°–æ–∑–¥–∞–Ω–æ",
                                                   format="DD.MM.YYYY",
                                                   default=datetime.datetime.today(),
                                                   disabled=True),
    }


def redact_tasks():
    columns = get_editors_columns_params()
    dataframe_columns_types = {'high_priority': bool,
                               'deadline': "datetime64[ns]",
                               'article': str,
                               'size': str,
                               'fabric': str,
                               'attributes': str,
                               'comment': str,
                               'photo': str,
                               'fabric_is_done': bool,
                               'gluing_is_done': bool,
                               'sewing_is_done': bool,
                               'packing_is_done': bool,
                               'address': str,
                               'delivery_type': str,
                               'region': str,
                               'client': str,
                               'history': str,
                               'created': "datetime64[ns]"}
    # –ï—Å–ª–∏ —Ñ–∞–π–ª —Å –∫—ç—à–µ–º –æ—Ç—Å—É—Ç—Å–≤—É–µ—Ç, —Å–æ–∑–¥–∞—ë—Ç –µ–≥–æ, –ø—Ä–æ–ø–∏—Å—ã–≤–∞—è –ø—É—Å—Ç—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –∏–∑ —Å–ª–æ–≤–∞—Ä—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–ª–æ–Ω–Ω
    if not os.path.exists(cash_file):
        base_dict = {}
        for key in columns.keys():
            base_dict[key] = []
        empty_dataframe = pd.DataFrame(base_dict)
        open(cash_file, 'w+')
        save_to_file(empty_dataframe, cash_file)

    if CASH_STATE not in st.session_state:
        dataframe = read_file(cash_file)
        dataframe = dataframe.astype(dataframe_columns_types)
        cashing(dataframe)

    edited_df = get_cash()

    editor = st.data_editor(
        edited_df,
        column_config=columns,
        hide_index=True,
        num_rows='fixed',
        on_change=cashing, args=(edited_df,),
        height=550
    )
    save_to_file(editor, cash_file)


################################################ Page ###################################################

half_screen_1, buff, half_screen_2 = st.columns(3)
with half_screen_1:
    st.title("üè≠ –í—Å–µ –∑–∞—è–≤–∫–∏")

with half_screen_2:
    quarter_1, quarter_2, quarter_3, quarter_4 = st.columns(4)
    with quarter_4:
        st.header(' ')
        st.button('–û–±–Ω–æ–≤–∏—Ç—å', on_click=clear_cash)

redact_tasks()
