document.addEventListener('DOMContentLoaded', function () {
    let capturing = false;
    let currentEmployeeSequence = '';

    document.addEventListener('keydown', function (event) {
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à-–º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤
        if (event.key === 'Shift' || event.key === 'Control' || event.key === 'Alt') {
            return;
        }

        let key = event.key;

        if (key === '(') {
            capturing = true;
            currentEmployeeSequence = '';
            console.log('–ù–∞—á–∞–ª–æ —Å—á–∏—Ç—ã–≤–∞–Ω–∏—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏...');
        } else if (key === ')') {
            capturing = false;
            console.log('–ö–æ–Ω–µ—Ü —Å—á–∏—Ç—ã–≤–∞–Ω–∏—è. –ü–æ–ª—É—á–µ–Ω–Ω–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å:', currentEmployeeSequence);
            processSequence(currentEmployeeSequence);  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        } else if (capturing) {
            currentEmployeeSequence += key;
        }
    });

    function processSequence(sequence) {
        console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä:', sequence);

        fetch('/log_sequence_sewing', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ sequence: sequence })
        })
        .then(response => response.json())
        .then(data => {
            console.log('–û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', data); // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞
            if (data.sequence) {
                console.log(`–°—á–∏—Ç–∞–Ω–Ω–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${data.sequence}`);
                document.getElementById('message').innerText = `üë∑‚Äç‚ôÇÔ∏è ${data.sequence}`;
            }
            if (data.task_data) {
                if (data.task_data.error) {
                    document.getElementById('task_data').innerText = data.task_data.error;
                } else {
                    displayTaskData(data.task_data);
                    document.getElementById('buttons').style.display = 'block';
                    document.getElementById('complete_button').dataset.employeeSequence = currentEmployeeSequence;
                }
            }
        })
        .catch(error => {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:', error);
        });
    }

    document.getElementById('hide_button').addEventListener('click', function () {
        resetPage();
    });

    document.getElementById('complete_button').addEventListener('click', function () {
        let employeeSequence = this.dataset.employeeSequence;

        console.log(`–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞: ${employeeSequence}`); // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –∑–∞–ø—Ä–æ—Å–∞

        fetch('/complete_task_sewing', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ employee_sequence: employeeSequence })
        })
        .then(response => response.json())
        .then(data => {
            if (data.status === 'success') {
                // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                resetPage();
            } else {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏:', data.message);
                document.getElementById('task_data').innerText = '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏.';
            }
        })
        .catch(error => {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏:', error);
        });
    });

    function resetPage() {
        document.getElementById('message').innerText = '';
        document.getElementById('task_data').innerHTML = '–ñ–¥—É —à—Ç—Ä–∏—Ö-–∫–æ–¥...';
        document.getElementById('buttons').style.display = 'none';
    }

    function displayTaskData(taskData) {
        var taskContainer = document.getElementById('task_data');
        taskContainer.innerHTML = ''; // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ–¥ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ–º

        // –î–æ–±–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        for (var key in taskData) {
            if (key !== '–§–æ—Ç–æ' && taskData[key]) {
                taskContainer.innerHTML += `<p><strong>${key}:</strong> ${taskData[key]}</p>`;
            }
        }

        // –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–æ—Ç–æ, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –∫–æ–Ω–µ—Ü
        if (taskData['–§–æ—Ç–æ']) {
            var imgElement = document.createElement('img');
            imgElement.src = taskData['–§–æ—Ç–æ'];
            imgElement.alt = '–§–æ—Ç–æ';
            imgElement.classList.add('thumbnail');

            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
            imgElement.addEventListener('click', function () {
                imgElement.classList.toggle('expanded');
            });

            taskContainer.appendChild(imgElement);
        }
    }
});
