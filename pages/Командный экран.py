import streamlit as st

from utils.app_core import Page
from utils.tools import config, show_table, clear_cash, read_file, create_cashfile_if_empty, cashing, \
    get_cash, save_to_file, barcode_link
import datetime


class CommandPage(Page):
    def __init__(self, name, icon):
        super().__init__(name, icon)
        self.task_cash = self.cash
        self.employees_cash = config.get('site').get('employees_cash_filepath')
        self.EMPLOYEE_STATE = 'employee_dataframe'
        self.TASK_STATE = 'task_dataframe'
        self.SHOW_TABLE = 'show_table'

        self.employee_columns_config = {
            "is_on_shift": st.column_config.CheckboxColumn("–ù–∞ —Å–º–µ–Ω–µ", default=False),
            "name": st.column_config.TextColumn("–ò–º—è / –§–∞–º–∏–ª–∏—è"),
            "position": st.column_config.TextColumn("–†–æ–ª–∏", width='medium'),
            "barcode": st.column_config.LinkColumn("–®—Ç—Ä–∏—Ö-–∫–æ–¥", display_text="–û—Ç–∫—Ä—ã—Ç—å"),
        }

        self.tasks_columns_config = {
            "high_priority": st.column_config.CheckboxColumn("–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç", default=False),
            "deadline": st.column_config.DateColumn("–°—Ä–æ–∫",
                                                    min_value=datetime.date(2000, 1, 1),
                                                    max_value=datetime.date(2999, 12, 31),
                                                    format="DD.MM.YYYY",
                                                    step=1,
                                                    default=datetime.date.today()),
            "article": "–ê—Ä—Ç–∏–∫—É–ª",
            "size": "–†–∞–∑–º–µ—Ä",
            "base_fabric": st.column_config.TextColumn("–¢–∫–∞–Ω—å (–í–µ—Ä—Ö / –ù–∏–∑)",
                                                       default='–¢–µ–∫—Å—Ç–∏–ª—å'),
            "side_fabric": st.column_config.TextColumn("–¢–∫–∞–Ω—å (–ë–æ–∫)",
                                                       default='–¢–µ–∫—Å—Ç–∏–ª—å'),
            "photo": st.column_config.ImageColumn("–§–æ—Ç–æ", help="–ö–ª–∏–∫–Ω–∏—Ç–µ, —á—Ç–æ–±—ã —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å"),
            "comment": st.column_config.TextColumn("–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π",
                                                   default='',
                                                   width='small'),
            "springs": st.column_config.TextColumn("–ü—Ä—É–∂–∏–Ω—ã",
                                                   default=''),
            "attributes": st.column_config.TextColumn("–°–æ—Å—Ç–∞–≤ –Ω–∞—á–∏–Ω–∫–∏",
                                                      default='',
                                                      width='medium'),
            "fabric_is_done": st.column_config.CheckboxColumn("–ù–∞—Ä–µ–∑–∞–Ω–æ",
                                                              default=False),
            "gluing_is_done": st.column_config.CheckboxColumn("–°–æ–±—Ä–∞–Ω",
                                                              default=False),
            "sewing_is_done": st.column_config.CheckboxColumn("–ü–æ—à–∏—Ç",
                                                              default=False),
            "packing_is_done": st.column_config.CheckboxColumn("–£–ø–∞–∫–æ–≤–∞–Ω",
                                                               default=False),
            "history": st.column_config.TextColumn("–î–µ–π—Å—Ç–≤–∏—è",
                                                   width='small',
                                                   disabled=True),
            "client": st.column_config.TextColumn("–ó–∞–∫–∞–∑—á–∏–∫",
                                                  default='',
                                                  width='medium'),
            "delivery_type": st.column_config.SelectboxColumn("–¢–∏–ø –¥–æ—Å—Ç–∞–≤–∫–∏",
                                                              options=config.get('site').get('delivery_types'),
                                                              default=config.get('site').get('delivery_types')[0],
                                                              required=True),
            "address": st.column_config.TextColumn("–ê–¥—Ä–µ—Å",
                                                   default='–ù–∞—à —Å–∫–ª–∞–¥',
                                                   width='large'),
            "region": st.column_config.SelectboxColumn("–†–µ–≥–∏–æ–Ω",
                                                       width='medium',
                                                       options=config.get('site').get('regions'),
                                                       default=config.get('site').get('regions')[0],
                                                       required=True),
            "created": st.column_config.DatetimeColumn("–°–æ–∑–¥–∞–Ω–æ",
                                                       format="D.MM.YYYY | HH:MM",
                                                       disabled=True),
        }

    def show_employees_table(self):
        # –°–æ–∑–¥–∞—ë—Ç —Ç–∞–±–ª–∏—Ü—É –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–æ–ª–æ–Ω–Ω, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        create_cashfile_if_empty(self.employee_columns_config, self.employees_cash)

        if self.EMPLOYEE_STATE not in st.session_state:
            dataframe = read_file(self.employees_cash)
            dataframe['barcode'] = dataframe['_index'].apply(barcode_link)
            cashing(dataframe, self.EMPLOYEE_STATE)

        edited_df = get_cash(self.EMPLOYEE_STATE)
        editor = st.data_editor(
            edited_df,
            column_config=self.employee_columns_config,
            hide_index=False,
            num_rows="dynamic",
            on_change=cashing, args=(edited_df, self.EMPLOYEE_STATE),
        )
        save_to_file(editor, self.employees_cash)

    def show_tasks_table(self, can_add_lines: bool = False):
        """–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —ç—Ç–æ–º –ø—Ä–æ–µ–∫—Ç–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π —Ñ–∞–π–ª pkl —Å –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–æ–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ pandas.
        –ö—ç—à –≤—ã—Å—Ç—É–ø–∞–µ—Ç –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —Ç–∞–±–ª–∏—Ü—ã. –¢–∞–±–ª–∏—Ü–∞ —Å—Ç—Ä–µ–º–∏—Ç—Å—è –ø–æ–¥–≥—Ä—É–∑–∏—Ç—Å—è –∏–∑ –∫—ç—à–∞,
        –∞ –∫—ç—à –¥–µ–ª–∞–µ—Ç—Å—è –∏–∑ session_state - —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã. –ö–∞–∂–¥–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
        –ø—Ä–æ–≤–æ—Ü–∏—Ä—É—é—Ç on_change –º–µ—Ç–æ–¥—ã, –∞ –ø–æ—Ç–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã. –ü–æ—ç—Ç–æ–º—É —Å–∏—Å—Ç–µ–º–∞
        —Ç–∞–∫–∞—è: –µ—Å–ª–∏ –∫—ç—à–∞ –Ω–µ—Ç - –ø–æ–¥–≥—Ä—É–∂–∞–µ—Ç—Å—è —Ç–∞–±–ª–∏—Ü–∞ –∏–∑ –±–∞–∑—ã, –æ–Ω–∞ –∂–µ –∫–æ–ø–∏—Ä—É–µ—Ç—Å—è –≤ –∫—ç—à.
        –ö–∞–∫ —Ç–æ–ª—å–∫–æ –∫–∞–∫–æ–µ-—Ç–æ –ø–æ–ª–µ –±—ã–ª–æ –∏–∑–º–µ–Ω–µ–Ω–æ, —Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ –∫—ç—à,
        –ø–æ—Ç–æ–º —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è, –ø–æ–¥–≥—Ä—É–∂–∞—è –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫—ç—à–∞, –∏ –ø–æ—Å–ª–µ –Ω–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏
        —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –±–∞–∑—É."""

        # –°–æ–∑–¥–∞—ë—Ç—Å—è —Ç–∞–±–ª–∏—Ü–∞ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–æ–ª–æ–Ω–Ω, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        create_cashfile_if_empty(self.tasks_columns_config, self.task_cash)

        # –°–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫–∏, –ø–æ—ç—Ç–æ–º—É —Ç—É—Ç
        # –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Å—Ç–æ–ª–±—Ü—ã –ø—Ä–µ–æ–±—Ä–∞–∑—É—é—Ç—Å—è –≤ —Ç–∏–ø—ã, —á–∏—Ç–∞–µ–º—ã–µ –¥–ª—è pandas.
        dataframe_columns_types = {'deadline': "datetime64[ns]",
                                   'created': "datetime64[ns]"}
        if self.TASK_STATE not in st.session_state:
            dataframe = read_file(self.task_cash)
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω—É–∂–Ω—ã—Ö –∫–æ–ª–æ–Ω–æ–∫ –≤ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–µ
            for col in dataframe_columns_types.keys():
                if col in dataframe.columns:
                    dataframe[col] = dataframe[col].astype(dataframe_columns_types[col])
            cashing(dataframe, self.TASK_STATE)

        edited_df = get_cash(self.TASK_STATE)
        editor = st.data_editor(
            edited_df,
            column_config=self.tasks_columns_config,
            hide_index=True,
            num_rows="fixed",
            on_change=cashing, args=(edited_df, self.TASK_STATE),
            height=420
        )
        save_to_file(editor, self.task_cash)
################################################ Page ####################################################

Command = CommandPage(name='–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–µ—Ä–º–∏–Ω–∞–ª',
                      icon='üõ†Ô∏è')

tasks_tab, employee_tab = st.tabs(['–ù–∞—Ä—è–¥—ã', '–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏'])

with tasks_tab:
    # –í SHOW_TABLE —Ö—Ä–∞–Ω–∏—Ç—Å—è –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π session_state,
    # –≤ –∫–æ—Ç–æ—Ä–æ–π –±—É–ª–µ–≤–æ –∑–Ω–∞—á–µ–Ω–∏–µ "–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å/–ù–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É".
    # –¢—É—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é show_table = False
    if Command.SHOW_TABLE not in st.session_state:
        st.session_state[Command.SHOW_TABLE] = False

    col1, col2 = st.columns([1, 2])

    with col1:
        st.title("üè≠ –í—Å–µ –Ω–∞—Ä—è–¥—ã")
        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è/—Å–∫—Ä—ã—Ç–∏—è —Ç–∞–±–ª–∏—Ü—ã —Å –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º —Ç–µ–∫—Å—Ç–∞
        button_text = '**–ü–µ—Ä–µ–π—Ç–∏ –≤ —Ä–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è**' if not st.session_state[
            SHOW_TABLE] else ":red[**–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –≤–µ—Ä–Ω—É—Ç—å —Ä–µ–∂–∏–º –ø—Ä–æ—Å–º–æ—Ç—Ä–∞**]"
        if st.button(button_text):
            clear_cash(TASK_STATE)  # –û—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ —Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è
            st.session_state[SHOW_TABLE] = not st.session_state[SHOW_TABLE]
            st.rerun()

    with col2:
        st.write(' ')
        st.info('''–ß—Ç–æ–±—ã –ø–æ–ø—Ä–∞–≤–∏—Ç—å –ª—é–±–æ–π –Ω–∞—Ä—è–¥, –≤–∫–ª—é—á–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.
        –û–Ω –æ–±–ª–∞–¥–∞–µ—Ç –≤—ã—Å—à–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º - –ø–æ–∫–∞ –∞–∫—Ç–∏–≤–µ–Ω —Ä–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è,
        –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö —Ä–∞–±–æ—á–∏—Ö –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è. **–ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Ç–∞–±–ª–∏—Ü—É!**''', icon="‚ÑπÔ∏è")

    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
    if st.session_state[SHOW_TABLE]:
        redact_table(tasks_columns, task_cash, TASK_STATE)
    if not st.session_state[SHOW_TABLE]:
        show_table(tasks_columns, task_cash)

# TODO: —Å–æ–≤–º–µ—Å—Ç–Ω—ã–π —Ç–∞–±–µ–ª—å - –∏—Å—Ç–æ—Ä–∏—è —Å–º–µ–Ω —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
with employee_tab:
    col1, col2 = st.columns([2, 1])
    with col1:
        st.title("üë∑ –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏")
        redact_table(employee_columns, employees_cash, EMPLOYEE_STATE, True)
    with col2:
        st.write(' ')
        st.info('–í—ã—Å—Ç–∞–≤–ª—è–π—Ç–µ —Ä–∞–±–æ—á–∏—Ö –Ω–∞ —Å–º–µ–Ω—É. –û–Ω–∏ –±—É–¥—É—Ç –∞–∫—Ç–∏–≤–Ω—ã –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –Ω–∞ –Ω—É–∂–Ω–æ–º —ç–∫—Ä–∞–Ω–µ. ',
                icon="‚ÑπÔ∏è")
        st.info('–í –ø–æ–ª–µ "–†–æ–ª–∏" –ø—Ä–æ–ø–∏—à–∏—Ç–µ —Ä–∞–±–æ—á–µ–µ –º–µ—Å—Ç–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É. –ú–æ–∂–Ω–æ –≤–ø–∏—Å–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ.'
                '–î–æ—Å—Ç—É–ø–Ω–æ: —Å–±–æ—Ä–∫–∞ –æ—Å–Ω–æ–≤—ã, –Ω–∞—Ä–µ–∑–∫–∞ —Ç–∫–∞–Ω–∏, —à–≤–µ–π–Ω—ã–π —Å—Ç–æ–ª, —É–ø–∞–∫–æ–≤–∫–∞',
                icon="‚ÑπÔ∏è")
        st.info('–ó–∞–¥–∞–π—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–æ–¥—ã. –û–Ω–∏ –¥–æ–ª–∂–Ω—ã —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ 3-—Ö —Å–∏–º–≤–æ–ª–æ–≤:'
                '–ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã. –ù–∞–ø—Ä–∏–º–µ—Ä: LA7, 123, ABC, t9L, kek',
                icon="‚ÑπÔ∏è")
