import streamlit as st
from streamlit_elements import elements, mui, event

frame = elements("callbacks_hotkey")

st.info('–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–∫–∞–Ω–µ—Ä –≤–∫–ª—é—á—ë–Ω.')

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
if 'show_input' not in st.session_state:
    st.session_state['show_input'] = False

if 'input_text' not in st.session_state:
    st.session_state['input_text'] = ""

if 'employee' not in st.session_state:
    st.session_state['employee'] = ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≥–æ—Ä—è—á–µ–π –∫–ª–∞–≤–∏—à–∏ "!"
def hotkey_pressed():
    st.session_state.input_text = ""
    st.session_state.show_input = True

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –ø–æ –≥–æ—Ä—è—á–µ–π –∫–ª–∞–≤–∏—à–µ "*"
def save_input():
    if st.session_state.input_text:
        st.session_state.employee = st.session_state.input_text
        st.session_state.show_input = False

# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è —Å–∫–∞–Ω–µ—Ä–∞
def button_pressed():
    st.toast('–°–∫–∞–Ω–µ—Ä –≤–∫–ª—é—á—ë–Ω!', icon='üö®')

with frame:
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≥–æ—Ä—è—á–∏—Ö –∫–ª–∞–≤–∏—à
    event.Hotkey("!", hotkey_pressed, bindInputs=True)
    event.Hotkey("*", save_input, bindInputs=True)

    scaner_button = mui.Button(onClick=button_pressed)
    with scaner_button:
        mui.icon.EmojiPeople()
        mui.Typography("–í–∫–ª—é—á–∏—Ç—å —Å–∫–∞–Ω–µ—Ä")

    # –ü–æ–ª–µ –≤–≤–æ–¥–∞ –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ, –Ω–æ —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
    if st.session_state.show_input:
        mui.TextField(
            label="–ß—Ç–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏...",
            value=st.session_state.input_text,
            onChange=lambda e: setattr(st.session_state, 'input_text', e.target.value),
            autoFocus=True,
        )

    if st.session_state.employee:
        mui.Typography(st.session_state.employee)
