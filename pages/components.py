import streamlit as st
from utils.app_core import ManufacturePage
from utils.tools import time_now, save_to_file


class ComponentsPage(ManufacturePage):
    def __init__(self, page_name, icon, columns_order):
        super().__init__(page_name, icon)
        self.columns_order = columns_order
        self.components_columns_config = {
            'components_is_done': st.column_config.CheckboxColumn("–ì–æ—Ç–æ–≤–æ"),
            'deadline': st.column_config.DateColumn("–î–∞—Ç–∞", format="DD.MM"),
            'article': st.column_config.TextColumn("–ê—Ä—Ç–∏–∫—É–ª"),
            'size': st.column_config.TextColumn("–†–∞–∑–º–µ—Ä"),
            'attributes': st.column_config.TextColumn("–°–æ—Å—Ç–∞–≤", width='large'),
            'comment': st.column_config.TextColumn("–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π", width='medium'),
            'photo': st.column_config.ImageColumn("–§–æ—Ç–æ"),
        }
        self.showed_articles = [
            '0', '000', '807', '808', '809', '901', '902', '903', '904', '905', '906', '907', '908', '909', '911', '912'
        ]

    def components_tasks(self):
        data = super().load_tasks()
        # –ê—Ä—Ç–∏–∫—É–ª—ã —Å –Ω—É–∂–Ω—ã–º–∏ –Ω–æ–º–µ—Ä–∞–º–∏ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è, –ø–æ—Ç–æ–º—É —á—Ç–æ –≤ web_app –µ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—Ç–∞–≤—è—â–∞—è
        # –≤—Å–µ–º –∞—Ä—Ç–∏–∫—É–ª–∞–º –≤ —Å–ø–∏—Å–∫–µ showed_articles –∏–∑ app_config –∑–Ω–∞—á–µ–Ω–∏–µ components_is_done == False.
        # –û—Å—Ç–∞–ª—å–Ω—ã–º —Å—Ç–∞–≤–∏—Ç True
        return data[(data['components_is_done'] == False) &
                    (data['sewing_is_done'] == False) &
                    (data['gluing_is_done'] == False) &
                    (data['packing_is_done'] == False)]

    @st.experimental_fragment(run_every="1s")
    def components_frame(self):
        tasks = self.components_tasks()
        return st.data_editor(tasks[self.columns_order],
                              column_config=self.components_columns_config,
                              hide_index=True)

    def components_table(self):
        tasks = super().load_tasks()
        # –°–æ–∑–¥–∞–µ–º —Ñ–æ—Ä–º—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ç–∞–±–ª–∏—Ü–µ
        with st.form(key='tasks_components_form'):
            inner_col_1, inner_col_2 = st.columns([4, 1])
            with inner_col_1:
                edited_tasks_df = self.components_frame()

            with inner_col_2:
                st.write('–ú–æ–∂–Ω–æ –æ—Ç–º–µ—Ç–∏—Ç—å –º–Ω–æ–≥–æ –≥–æ—Ç–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫ –∑–∞ —Ä–∞–∑ –∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É:')
                # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                submit_button = st.form_submit_button(label='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å')
                if submit_button:
                    employee = st.session_state.get(self.page_name)
                    if not employee:
                        st.warning("–°–Ω–∞—á–∞–ª–∞ –æ—Ç–º–µ—Ç—å—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞.")
                    else:
                        for index, row in edited_tasks_df.iterrows():
                            if row['components_is_done']:
                                history_note = f'({time_now()}) {self.page_name} [ {employee} ] -> {self.done_button_text}; \n'
                                tasks.at[index, 'history'] += history_note
                                tasks.at[index, 'components_is_done'] = True
                        save_to_file(tasks, self.task_cash)
                        st.rerun()


Page = ComponentsPage(page_name='–ó–∞–≥–æ—Ç–æ–≤–∫–∞',
                      icon="üß±",
                      columns_order=['components_is_done', 'deadline', 'article', 'size', 'attributes', 'comment',
                                     'photo'])

col_table, col_info = st.columns([4, 1])

with col_table:
    Page.components_table()

with col_info:
    st.info('–í—ã –º–æ–∂–µ—Ç–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞—Ä—è–¥—ã, –Ω–∞–∂–∏–º–∞—è –Ω–∞ –ø–æ–ª—è —Ç–∞–±–ª–∏—Ü—ã. ', icon="‚ÑπÔ∏è")

