import streamlit as st

from utils.app_core import ManufacturePage
from utils.tools import fabric_type


class ComponentsPage(ManufacturePage):
    def __init__(self, page_name, icon):
        super().__init__(page_name, icon)
        self.components_columns_config = {
            'components_is_done': st.column_config.CheckboxColumn("–ì–æ—Ç–æ–≤–æ"),
            'deadline': st.column_config.DateColumn("–î–∞—Ç–∞", format="DD.MM", disabled=True),
            'article': st.column_config.TextColumn("–ê—Ä—Ç–∏–∫—É–ª", disabled=True),
            'size': st.column_config.TextColumn("–†–∞–∑–º–µ—Ä", disabled=True),
            'attributes': st.column_config.TextColumn("–°–æ—Å—Ç–∞–≤", disabled=True),
            'base_fabric_type': st.column_config.TextColumn("–¢–∏–ø —Ç–∫–∞–Ω–∏ (–¢–æ–ø)", disabled=True),
            'side_fabric_type': st.column_config.TextColumn("–¢–∏–ø —Ç–∫–∞–Ω–∏ (–ë–æ–∫)", disabled=True),
            'comment': st.column_config.TextColumn("–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π", width='medium', disabled=True),
            'photo': st.column_config.ImageColumn("–§–æ—Ç–æ")
        }

    @st.fragment(run_every=2)
    def components_frame(self):

        employee = st.session_state.get(self.page_name)
        if not employee:
            st.warning("–°–Ω–∞—á–∞–ª–∞ –æ—Ç–º–µ—Ç—å—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞.")
            return

        all_tasks = self.get_sorted_tasks()
        if all_tasks is None or all_tasks.empty:
            st.info("–ó–∞—è–≤–∫–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å.")
            return

        tasks = self.filter_incomplete_tasks(all_tasks, {'components_is_done': False})

        # –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–µ–ø–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –æ–¥–Ω–æ–π –∏ —Ç–æ–π –∂–µ —Ç–∞–±–ª–∏—Ü—ã
        tasks = tasks.copy()
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–ª–æ–Ω–∫–∏ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–∏–ø–µ —Ç–∫–∞–Ω–µ–π, –≤—ã—á–∏—Å–ª—è–µ–º–º–æ–π –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏. –ï—ë –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–æ—Ö—Ä–∞–Ω—è—Ç—å
        tasks.loc[:, 'base_fabric_type'] = tasks['base_fabric'].apply(fabric_type)
        tasks.loc[:, 'side_fabric_type'] = tasks['side_fabric'].apply(fabric_type)

        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ—Ä—è–¥–æ–∫ –ø–æ–∫–∞–∑–∞ –ø–æ–ª–µ–π –æ—Ç —Å–ª–æ–≤–∞—Ä—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        columns_order = list(self.components_columns_config)
        return st.data_editor(tasks[columns_order],
                              column_config=self.components_columns_config,
                              hide_index=False,
                              height=750)

    def components_table(self):
        submit = st.button(label='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å')

        edited_df = self.components_frame()

        if not submit or edited_df is None:
            return

        self.update_tasks(edited_df, 'components_is_done')
        st.rerun()


Page = ComponentsPage(page_name='–ó–∞–≥–æ—Ç–æ–≤–∫–∞',
                      icon="üß±")

col_table, col_info = st.columns([4, 1])

with col_table:
    Page.components_table()

with col_info:
    st.info('–í—ã –º–æ–∂–µ—Ç–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞—Ä—è–¥—ã, –Ω–∞–∂–∏–º–∞—è –Ω–∞ –ø–æ–ª—è —Ç–∞–±–ª–∏—Ü—ã. ', icon="‚ÑπÔ∏è")
    st.info('–ú–æ–∂–Ω–æ –æ—Ç–º–µ—Ç–∏—Ç—å –º–Ω–æ–≥–æ –≥–æ—Ç–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫ –∑–∞ —Ä–∞–∑ –∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"', icon="‚ÑπÔ∏è")
    st.warning("–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∑–∞—è–≤–∫–∏ —Ä–∞—Å–ø–æ–ª–∞–≥–∞—é—Ç—Å—è —Å–≤–µ—Ä—Ö—É –≤–Ω–∏–∑ –≤ –ø–æ—Ä—è–¥–∫–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞. –°–∞–º—ã–µ —Å—Ä–æ—á–Ω—ã–µ –Ω–∞–≤–µ—Ä—Ö—É.", icon="‚ÑπÔ∏è")
